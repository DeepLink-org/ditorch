name: runs on nv
on:
  workflow_dispatch:
    inputs:
      run_test_use_pytorch:
        description: 'Run Test_use_pytorch job'
        required: false
        default: 'false'
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:

env:
  DEEPLINK_PATH: '/mnt/cache/share/deeplinkci/github/${{ github.repository }}'

concurrency:
  group: nv-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  checkout_code:
    name: checkout code
    runs-on: tps-sco-ci
    steps:
      - name: Checkout Code
        uses: DeepLink-org/ditorch/.github/actions/checkout-code@main

  Build:
    name: build on nv
    runs-on: tps-sco-ci
    needs: [checkout_code]
    steps:
      - name: build
        run: |
          set -ex
          cd ${DEEPLINK_PATH}/${GITHUB_RUN_NUMBER} && rm -rf ${GITHUB_JOB} && cp -R source ${GITHUB_JOB}  && cd ${GITHUB_JOB}
          echo "start to build"

  Test:
    name: test on nv
    runs-on: tps-sco-ci
    needs: [Build]
    steps:
      - name: test
        run: |
          set -ex
          cd ${DEEPLINK_PATH}/${GITHUB_RUN_NUMBER} && rm -rf ${GITHUB_JOB} && cp -R Build ${GITHUB_JOB}  && cd ${GITHUB_JOB}
          echo "start to test"
          srun --job-name=${GITHUB_JOB} bash -c "source /mnt/cache/share/platform/env/ditorch_env && cd ${DEEPLINK_PATH}/${GITHUB_RUN_NUMBER}/${GITHUB_JOB} && bash ci/run_op_tools_test_cases.sh"

  save_params:
    runs-on: ubuntu-latest
    outputs:
      run_test: ${{ steps.save.outputs.run_test }}
    steps:
    - name: Save input parameter
      id: save
      run: echo "::set-output name=run_test::${{ github.event.inputs.run_test_use_pytorch || 'false' }}"

  Test_use_pytorch_test_case:
    name: run pytorch test case on nv
    runs-on: tps-sco-ci
    if: ${{ needs.save_params.outputs.run_test == 'true' || github.ref == 'refs/heads/main' }}
    needs: [Build, save_params]
    steps:
      - name: test
        run: |
          set -ex
          cd ${DEEPLINK_PATH}/${GITHUB_RUN_NUMBER} && rm -rf ${GITHUB_JOB} && cp -R Build ${GITHUB_JOB}  && cd ${GITHUB_JOB}
          echo "start to test"
          srun --job-name=${GITHUB_JOB} bash -c "source /mnt/cache/share/platform/env/ditorch_env && export PYTHONPATH=${PYTHONPATH}:$PWD && cd ${DEEPLINK_PATH}/${GITHUB_RUN_NUMBER}/${GITHUB_JOB} && bash ci/run_pytorch_test_cases.sh"

